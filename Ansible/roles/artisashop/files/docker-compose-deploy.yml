version: '3.8'
services:
  backend:
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - PARSE_ARTISASHOP_MASTER_KEY=${PARSE_ARTISASHOP_MASTER_KEY}
      - PARSE_ARTISASHOP_RESTAPI_KEY=${PARSE_ARTISASHOP_RESTAPI_KEY}
    build:
      context: ./Backend
      dockerfile: Dockerfile
    expose:
      - 80
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
    networks:
      - traefik-tier
      - db-tier
      - mail-tier
    labels:
      - "traefik.enable=true"
      # - "traefik.http.${COMPOSE_PROJECT_NAME}-artisaback.rule=Host(`api.${ARTISASHOP_HOST}`)"
      # - "traefik.http.${COMPOSE_PROJECT_NAME}-artisaback.entrypoints=websecure"
      # - "traefik.http.${COMPOSE_PROJECT_NAME}-artisaback.priority=820"
      # - "traefik.http.services.${COMPOSE_PROJECT_NAME}-backend.loadbalancer.server.port=80"

      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-backend.rule=Host(`api.${ARTISASHOP_HOST}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-backend.entrypoints=websecure"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-backend.loadbalancer.server.port=80"

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      # - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-artisafront.rule=Host(`${ARTISASHOP_HOST}`)"
      # - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-artisafront.entrypoints=websecure"
      # - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-artisafront.middlewares=${COMPOSE_PROJECT_NAME}-redirect-shop"
      # - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-redirect-shop.redirectregex.regex=(http(s*)://)?${ARTISASHOP_HOST}/?(.*)"
      # - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-redirect-shop.redirectregex.replacement=https://${ARTISASHOP_HOST}/$${3}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-frontend.rule=Host(`${ARTISASHOP_HOST}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-frontend.entrypoints=websecure"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-frontend.loadbalancer.server.port=80"
    networks:
      - traefik-tier

  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgresUser
      - POSTGRES_PASSWORD=postgresPW
      - POSTGRES_DB=postgresDB
    expose:
      - 5432
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./dbsrcipts/seed.sql :/docker-entrypoint-initdb.d/seed.sql
    networks:
      - traefik-tier
      - db-tier
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.mongo-express.loadbalancer.server.port=8081"

# This part is auto-generated by the Mailu configuration wizard.
# Please read the documentation before attempting any change.
# Generated for compose flavor

  # External dependencies
  mailu-redis:
    image: redis:alpine
    restart: always
    volumes:
      - "/mailu/redis:/data"
    depends_on:
      - resolver
    dns:
      - 192.168.203.254

  # Core services
  mailu-front:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}nginx:${MAILU_VERSION:-1.9}
    restart: always
    env_file: mailu.env
    logging:
      driver: json-file
    ports:
      - "51.77.213.164:80:80"
      - "51.77.213.164:443:443"
      - "51.77.213.164:25:25"
      - "51.77.213.164:465:465"
      - "51.77.213.164:587:587"
      - "51.77.213.164:110:110"
      - "51.77.213.164:995:995"
      - "51.77.213.164:143:143"
      - "51.77.213.164:993:993"
    volumes:
      - "/mailu/certs:/certs"
      - "/mailu/overrides/nginx:/overrides:ro"
    depends_on:
      - resolver
    dns:
      - 192.168.203.254
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mailu.rule=Host(`mailu.${ARTISASHOP_HOST}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mailu.entrypoints=websecure"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mailu.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mailu.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mailu.middlewares=chain-redirect-to-https"
      # - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mailu-redirect.rule=Host(`mailu.${ARTISASHOP_HOST}`)"
      # - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mailu-redirect.entrypoints=web"

  mailu-resolver:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}unbound:${MAILU_VERSION:-1.9}
    env_file: mailu.env
    restart: always
    networks:
      default:
        ipv4_address: 192.168.203.254

  mailu-admin:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}admin:${MAILU_VERSION:-1.9}
    restart: always
    env_file: mailu.env
    volumes:
      - "/mailu/data:/data"
      - "/mailu/dkim:/dkim"
    depends_on:
      - redis
      - resolver
    dns:
      - 192.168.203.254

  mailu-imap:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}dovecot:${MAILU_VERSION:-1.9}
    restart: always
    env_file: mailu.env
    volumes:
      - "/mailu/mail:/mail"
      - "/mailu/overrides/dovecot:/overrides:ro"
    depends_on:
      - front
      - resolver
    dns:
      - 192.168.203.254

  mailu-smtp:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}postfix:${MAILU_VERSION:-1.9}
    restart: always
    env_file: mailu.env
    volumes:
      - "/mailu/mailqueue:/queue"
      - "/mailu/overrides/postfix:/overrides:ro"
    depends_on:
      - front
      - resolver
    dns:
      - 192.168.203.254

  mailu-antispam:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}rspamd:${MAILU_VERSION:-1.9}
    hostname: antispam
    restart: always
    env_file: mailu.env
    volumes:
      - "/mailu/filter:/var/lib/rspamd"
      - "/mailu/overrides/rspamd:/etc/rspamd/override.d:ro"
    depends_on:
      - front
      - resolver
    dns:
      - 192.168.203.254

  # Optional services
  mailu-antivirus:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}clamav:${MAILU_VERSION:-1.9}
    restart: always
    env_file: mailu.env
    volumes:
      - "/mailu/filter:/data"
    depends_on:
      - resolver
    dns:
      - 192.168.203.254

  mailu-webdav:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}radicale:${MAILU_VERSION:-1.9}
    restart: always
    env_file: mailu.env
    volumes:
      - "/mailu/dav:/data"
    depends_on:
      - resolver
    dns:
      - 192.168.203.254

  mailu-fetchmail:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}fetchmail:${MAILU_VERSION:-1.9}
    restart: always
    env_file: mailu.env
    volumes:
      - "/mailu/data/fetchmail:/data"
    depends_on:
      - resolver
    dns:
      - 192.168.203.254

  # Webmail
  mailu-webmail:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}roundcube:${MAILU_VERSION:-1.9}
    restart: always
    env_file: mailu.env
    volumes:
      - "/mailu/webmail:/data"
      - "/mailu/overrides/roundcube:/overrides:ro"
    depends_on:
      - imap
      - resolver
    dns:
      - 192.168.203.254

volumes:
  db-data:

networks:
  db-tier:
    driver: bridge
  mail-tier:
    driver: bridge
  traefik-tier:
    external:
      name: ${TRAEFIK_DOCKER_NETWORK}
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.203.0/24
