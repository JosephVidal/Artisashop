/* tslint:disable */
/* eslint-disable */
/**
 * API Artisashop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Account,
  Product,
} from '../models';
import {
    AccountFromJSON,
    AccountToJSON,
    ProductFromJSON,
    ProductToJSON,
} from '../models';

export interface ApiSearchCraftsmanGetRequest {
    firstName?: string;
    lastName?: string;
    job?: string;
    userGPSCoordId?: number;
    userGPSCoordLatitude?: number;
    userGPSCoordLongitude?: number;
    distance?: number;
}

export interface ApiSearchProductGetRequest {
    name?: string;
    job?: string;
    styles?: Array<string>;
    userGPSCoordId?: number;
    userGPSCoordLatitude?: number;
    userGPSCoordLongitude?: number;
    distance?: number;
}

/**
 * 
 */
export class SearchApi extends runtime.BaseAPI {

    /**
     */
    async apiSearchCraftsmanGetRaw(requestParameters: ApiSearchCraftsmanGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Account>>> {
        const queryParameters: any = {};

        if (requestParameters.firstName !== undefined) {
            queryParameters['FirstName'] = requestParameters.firstName;
        }

        if (requestParameters.lastName !== undefined) {
            queryParameters['LastName'] = requestParameters.lastName;
        }

        if (requestParameters.job !== undefined) {
            queryParameters['Job'] = requestParameters.job;
        }

        if (requestParameters.userGPSCoordId !== undefined) {
            queryParameters['UserGPSCoord.Id'] = requestParameters.userGPSCoordId;
        }

        if (requestParameters.userGPSCoordLatitude !== undefined) {
            queryParameters['UserGPSCoord.Latitude'] = requestParameters.userGPSCoordLatitude;
        }

        if (requestParameters.userGPSCoordLongitude !== undefined) {
            queryParameters['UserGPSCoord.Longitude'] = requestParameters.userGPSCoordLongitude;
        }

        if (requestParameters.distance !== undefined) {
            queryParameters['Distance'] = requestParameters.distance;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/search/craftsman`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(AccountFromJSON));
    }

    /**
     */
    async apiSearchCraftsmanGet(requestParameters: ApiSearchCraftsmanGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Account>> {
        const response = await this.apiSearchCraftsmanGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiSearchProductGetRaw(requestParameters: ApiSearchProductGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Product>>> {
        const queryParameters: any = {};

        if (requestParameters.name !== undefined) {
            queryParameters['Name'] = requestParameters.name;
        }

        if (requestParameters.job !== undefined) {
            queryParameters['Job'] = requestParameters.job;
        }

        if (requestParameters.styles) {
            queryParameters['Styles'] = requestParameters.styles;
        }

        if (requestParameters.userGPSCoordId !== undefined) {
            queryParameters['UserGPSCoord.Id'] = requestParameters.userGPSCoordId;
        }

        if (requestParameters.userGPSCoordLatitude !== undefined) {
            queryParameters['UserGPSCoord.Latitude'] = requestParameters.userGPSCoordLatitude;
        }

        if (requestParameters.userGPSCoordLongitude !== undefined) {
            queryParameters['UserGPSCoord.Longitude'] = requestParameters.userGPSCoordLongitude;
        }

        if (requestParameters.distance !== undefined) {
            queryParameters['Distance'] = requestParameters.distance;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/search/product`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ProductFromJSON));
    }

    /**
     */
    async apiSearchProductGet(requestParameters: ApiSearchProductGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Product>> {
        const response = await this.apiSearchProductGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
