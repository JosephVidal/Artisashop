/* tslint:disable */
/* eslint-disable */
/**
 * API Artisashop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Basket } from './Basket';
import {
    BasketFromJSON,
    BasketFromJSONTyped,
    BasketToJSON,
} from './Basket';
import type { Bill } from './Bill';
import {
    BillFromJSON,
    BillFromJSONTyped,
    BillToJSON,
} from './Bill';
import type { GPSCoord } from './GPSCoord';
import {
    GPSCoordFromJSON,
    GPSCoordFromJSONTyped,
    GPSCoordToJSON,
} from './GPSCoord';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './Product';

/**
 * 
 * @export
 * @interface Account
 */
export interface Account {
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    userName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    normalizedUserName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    normalizedEmail?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Account
     */
    emailConfirmed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    passwordHash?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    securityStamp?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    concurrencyStamp?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Account
     */
    phoneNumberConfirmed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Account
     */
    twoFactorEnabled?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Account
     */
    lockoutEnd?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof Account
     */
    lockoutEnabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Account
     */
    accessFailedCount?: number;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    lastname: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    firstname: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    profilePicture?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    job?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    biography?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    address?: string | null;
    /**
     * 
     * @type {GPSCoord}
     * @memberof Account
     */
    addressGPS?: GPSCoord;
    /**
     * 
     * @type {Date}
     * @memberof Account
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Account
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {Array<Basket>}
     * @memberof Account
     */
    baskets?: Array<Basket> | null;
    /**
     * 
     * @type {Array<Bill>}
     * @memberof Account
     */
    bills?: Array<Bill> | null;
    /**
     * 
     * @type {Array<Product>}
     * @memberof Account
     */
    products?: Array<Product> | null;
}

/**
 * Check if a given object implements the Account interface.
 */
export function instanceOfAccount(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lastname" in value;
    isInstance = isInstance && "firstname" in value;

    return isInstance;
}

export function AccountFromJSON(json: any): Account {
    return AccountFromJSONTyped(json, false);
}

export function AccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): Account {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
        'normalizedUserName': !exists(json, 'normalizedUserName') ? undefined : json['normalizedUserName'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'normalizedEmail': !exists(json, 'normalizedEmail') ? undefined : json['normalizedEmail'],
        'emailConfirmed': !exists(json, 'emailConfirmed') ? undefined : json['emailConfirmed'],
        'passwordHash': !exists(json, 'passwordHash') ? undefined : json['passwordHash'],
        'securityStamp': !exists(json, 'securityStamp') ? undefined : json['securityStamp'],
        'concurrencyStamp': !exists(json, 'concurrencyStamp') ? undefined : json['concurrencyStamp'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'phoneNumberConfirmed': !exists(json, 'phoneNumberConfirmed') ? undefined : json['phoneNumberConfirmed'],
        'twoFactorEnabled': !exists(json, 'twoFactorEnabled') ? undefined : json['twoFactorEnabled'],
        'lockoutEnd': !exists(json, 'lockoutEnd') ? undefined : (json['lockoutEnd'] === null ? null : new Date(json['lockoutEnd'])),
        'lockoutEnabled': !exists(json, 'lockoutEnabled') ? undefined : json['lockoutEnabled'],
        'accessFailedCount': !exists(json, 'accessFailedCount') ? undefined : json['accessFailedCount'],
        'lastname': json['lastname'],
        'firstname': json['firstname'],
        'profilePicture': !exists(json, 'profilePicture') ? undefined : json['profilePicture'],
        'job': !exists(json, 'job') ? undefined : json['job'],
        'biography': !exists(json, 'biography') ? undefined : json['biography'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'addressGPS': !exists(json, 'addressGPS') ? undefined : GPSCoordFromJSON(json['addressGPS']),
        'createdAt': !exists(json, 'createdAt') ? undefined : (json['createdAt'] === null ? null : new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (json['updatedAt'] === null ? null : new Date(json['updatedAt'])),
        'baskets': !exists(json, 'baskets') ? undefined : (json['baskets'] === null ? null : (json['baskets'] as Array<any>).map(BasketFromJSON)),
        'bills': !exists(json, 'bills') ? undefined : (json['bills'] === null ? null : (json['bills'] as Array<any>).map(BillFromJSON)),
        'products': !exists(json, 'products') ? undefined : (json['products'] === null ? null : (json['products'] as Array<any>).map(ProductFromJSON)),
    };
}

export function AccountToJSON(value?: Account | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userName': value.userName,
        'normalizedUserName': value.normalizedUserName,
        'email': value.email,
        'normalizedEmail': value.normalizedEmail,
        'emailConfirmed': value.emailConfirmed,
        'passwordHash': value.passwordHash,
        'securityStamp': value.securityStamp,
        'concurrencyStamp': value.concurrencyStamp,
        'phoneNumber': value.phoneNumber,
        'phoneNumberConfirmed': value.phoneNumberConfirmed,
        'twoFactorEnabled': value.twoFactorEnabled,
        'lockoutEnd': value.lockoutEnd === undefined ? undefined : (value.lockoutEnd === null ? null : value.lockoutEnd.toISOString()),
        'lockoutEnabled': value.lockoutEnabled,
        'accessFailedCount': value.accessFailedCount,
        'lastname': value.lastname,
        'firstname': value.firstname,
        'profilePicture': value.profilePicture,
        'job': value.job,
        'biography': value.biography,
        'address': value.address,
        'addressGPS': GPSCoordToJSON(value.addressGPS),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt === null ? null : value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt === null ? null : value.updatedAt.toISOString()),
        'baskets': value.baskets === undefined ? undefined : (value.baskets === null ? null : (value.baskets as Array<any>).map(BasketToJSON)),
        'bills': value.bills === undefined ? undefined : (value.bills === null ? null : (value.bills as Array<any>).map(BillToJSON)),
        'products': value.products === undefined ? undefined : (value.products === null ? null : (value.products as Array<any>).map(ProductToJSON)),
    };
}

