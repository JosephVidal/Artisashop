/* tslint:disable */
/* eslint-disable */
/**
 * API Artichaut
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Account } from './Account';
import {
    AccountFromJSON,
    AccountFromJSONTyped,
    AccountToJSON,
} from './Account';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './Product';
import type { ReportStatus } from './ReportStatus';
import {
    ReportStatusFromJSON,
    ReportStatusFromJSONTyped,
    ReportStatusToJSON,
} from './ReportStatus';

/**
 * 
 * @export
 * @interface Report
 */
export interface Report {
    /**
     * 
     * @type {number}
     * @memberof Report
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof Report
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Report
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof Report
     */
    reporterId?: number;
    /**
     * 
     * @type {Account}
     * @memberof Report
     */
    reporter?: Account;
    /**
     * 
     * @type {ReportStatus}
     * @memberof Report
     */
    status?: ReportStatus;
    /**
     * 
     * @type {string}
     * @memberof Report
     */
    reason?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Report
     */
    reportedUserId?: number;
    /**
     * 
     * @type {Account}
     * @memberof Report
     */
    reportedUser?: Account;
    /**
     * 
     * @type {number}
     * @memberof Report
     */
    reportedProductId?: number | null;
    /**
     * 
     * @type {Product}
     * @memberof Report
     */
    reportedProduct?: Product;
}

/**
 * Check if a given object implements the Report interface.
 */
export function instanceOfReport(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReportFromJSON(json: any): Report {
    return ReportFromJSONTyped(json, false);
}

export function ReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): Report {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (json['createdAt'] === null ? null : new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (json['updatedAt'] === null ? null : new Date(json['updatedAt'])),
        'reporterId': !exists(json, 'reporterId') ? undefined : json['reporterId'],
        'reporter': !exists(json, 'reporter') ? undefined : AccountFromJSON(json['reporter']),
        'status': !exists(json, 'status') ? undefined : ReportStatusFromJSON(json['status']),
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'reportedUserId': !exists(json, 'reportedUserId') ? undefined : json['reportedUserId'],
        'reportedUser': !exists(json, 'reportedUser') ? undefined : AccountFromJSON(json['reportedUser']),
        'reportedProductId': !exists(json, 'reportedProductId') ? undefined : json['reportedProductId'],
        'reportedProduct': !exists(json, 'reportedProduct') ? undefined : ProductFromJSON(json['reportedProduct']),
    };
}

export function ReportToJSON(value?: Report | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt === null ? null : value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt === null ? null : value.updatedAt.toISOString()),
        'reporterId': value.reporterId,
        'reporter': AccountToJSON(value.reporter),
        'status': ReportStatusToJSON(value.status),
        'reason': value.reason,
        'reportedUserId': value.reportedUserId,
        'reportedUser': AccountToJSON(value.reportedUser),
        'reportedProductId': value.reportedProductId,
        'reportedProduct': ProductToJSON(value.reportedProduct),
    };
}

