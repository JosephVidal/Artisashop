/* tslint:disable */
/* eslint-disable */
/**
 * API Artisashop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Account } from './Account';
import {
    AccountFromJSON,
    AccountFromJSONTyped,
    AccountToJSON,
} from './Account';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './Product';

/**
 * 
 * @export
 * @interface Seller
 */
export interface Seller {
    /**
     * 
     * @type {number}
     * @memberof Seller
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof Seller
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Seller
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Seller
     */
    storeName?: string | null;
    /**
     * 
     * @type {Account}
     * @memberof Seller
     */
    account?: Account;
    /**
     * 
     * @type {string}
     * @memberof Seller
     */
    accountId?: string | null;
    /**
     * 
     * @type {Array<Product>}
     * @memberof Seller
     */
    products?: Array<Product> | null;
}

/**
 * Check if a given object implements the Seller interface.
 */
export function instanceOfSeller(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SellerFromJSON(json: any): Seller {
    return SellerFromJSONTyped(json, false);
}

export function SellerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Seller {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (json['createdAt'] === null ? null : new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (json['updatedAt'] === null ? null : new Date(json['updatedAt'])),
        'storeName': !exists(json, 'storeName') ? undefined : json['storeName'],
        'account': !exists(json, 'account') ? undefined : AccountFromJSON(json['account']),
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'products': !exists(json, 'products') ? undefined : (json['products'] === null ? null : (json['products'] as Array<any>).map(ProductFromJSON)),
    };
}

export function SellerToJSON(value?: Seller | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt === null ? null : value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt === null ? null : value.updatedAt.toISOString()),
        'storeName': value.storeName,
        'account': AccountToJSON(value.account),
        'accountId': value.accountId,
        'products': value.products === undefined ? undefined : (value.products === null ? null : (value.products as Array<any>).map(ProductToJSON)),
    };
}

