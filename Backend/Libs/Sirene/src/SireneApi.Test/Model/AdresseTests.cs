/*
 * API Sirene
 *
 * <p><span style=\"color:red;\"> <b></b></p><br></span><span style=\"color:blue;\"> <b>Les tranches d’effectifs et les catégories d’entreprises du millésime 2020 sont désormais disponibles</b></span> <br><br><span style=\"color:blue;\"><i>La documentation des services est désormais au format html (Cf. Onglet Documentation)</i></span></p> <p><h4 class=\"add-margin-top-5x\"><b>Les données du répertoire Sirene depuis 1973</b></h4><p>API Sirene donne accès aux informations concernant les entreprises et les établissements enregistrés au répertoire interadministratif Sirene depuis sa création en 1973, y compris les unités fermées.</p> <p>La recherche peut être unitaire, multicritère, phonétique et porter sur les données courantes et historisées.</p> <p></p> <p>Les services actuellement disponibles interrogent :</p> <ul> <li> les unités légales (siren) </li> <li> les établissements (siret). </li> </ul> <p>Le service informations permet de connaître les dates de dernières mises à jour.</p> <p>Le service Liens de succession informe sur les prédécesseurs et les successeurs des établissements.</p> <p align=\"justify\" style=\"margin-top: 0.6cm\">Le service nonDiffusibles restitue les siren et siret des personnes physiques ayant demandé à être exclues de la diffusion publique conformément à l'article A123-96 du code de commerce. Les informations les concernant ne peuvent alors être rediffusées, ni utilisées à des fins de prospection. Les utilisateurs ayant un référentiel en interne peuvent ainsi le mettre à jour quotidiennement.</p> <p>La lettre <b>Sirene open data actualités</b> est destinée aux utilisateurs des données Sirene. Pour vous abonner, <a href=\"https://insee.fr/fr/information/1405555\">suivez ce lien</a>. Pour consulter les précédents numéros, <a href=\"https://insee.fr/fr/information/3711739\">cliquez ici</a>.</p>
 *
 * The version of the OpenAPI document: 3.9
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SireneApi.Api;
using SireneApi.Model;
using SireneApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SireneApi.Test.Model
{
    /// <summary>
    ///  Class for testing Adresse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AdresseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Adresse
        //private Adresse instance;

        public AdresseTests()
        {
            // TODO uncomment below to create an instance of Adresse
            //instance = new Adresse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Adresse
        /// </summary>
        [Fact]
        public void AdresseInstanceTest()
        {
            // TODO uncomment below to test "IsType" Adresse
            //Assert.IsType<Adresse>(instance);
        }


        /// <summary>
        /// Test the property 'ComplementAdresseEtablissement'
        /// </summary>
        [Fact]
        public void ComplementAdresseEtablissementTest()
        {
            // TODO unit test for the property 'ComplementAdresseEtablissement'
        }
        /// <summary>
        /// Test the property 'NumeroVoieEtablissement'
        /// </summary>
        [Fact]
        public void NumeroVoieEtablissementTest()
        {
            // TODO unit test for the property 'NumeroVoieEtablissement'
        }
        /// <summary>
        /// Test the property 'IndiceRepetitionEtablissement'
        /// </summary>
        [Fact]
        public void IndiceRepetitionEtablissementTest()
        {
            // TODO unit test for the property 'IndiceRepetitionEtablissement'
        }
        /// <summary>
        /// Test the property 'TypeVoieEtablissement'
        /// </summary>
        [Fact]
        public void TypeVoieEtablissementTest()
        {
            // TODO unit test for the property 'TypeVoieEtablissement'
        }
        /// <summary>
        /// Test the property 'LibelleVoieEtablissement'
        /// </summary>
        [Fact]
        public void LibelleVoieEtablissementTest()
        {
            // TODO unit test for the property 'LibelleVoieEtablissement'
        }
        /// <summary>
        /// Test the property 'CodePostalEtablissement'
        /// </summary>
        [Fact]
        public void CodePostalEtablissementTest()
        {
            // TODO unit test for the property 'CodePostalEtablissement'
        }
        /// <summary>
        /// Test the property 'LibelleCommuneEtablissement'
        /// </summary>
        [Fact]
        public void LibelleCommuneEtablissementTest()
        {
            // TODO unit test for the property 'LibelleCommuneEtablissement'
        }
        /// <summary>
        /// Test the property 'LibelleCommuneEtrangerEtablissement'
        /// </summary>
        [Fact]
        public void LibelleCommuneEtrangerEtablissementTest()
        {
            // TODO unit test for the property 'LibelleCommuneEtrangerEtablissement'
        }
        /// <summary>
        /// Test the property 'DistributionSpecialeEtablissement'
        /// </summary>
        [Fact]
        public void DistributionSpecialeEtablissementTest()
        {
            // TODO unit test for the property 'DistributionSpecialeEtablissement'
        }
        /// <summary>
        /// Test the property 'CodeCommuneEtablissement'
        /// </summary>
        [Fact]
        public void CodeCommuneEtablissementTest()
        {
            // TODO unit test for the property 'CodeCommuneEtablissement'
        }
        /// <summary>
        /// Test the property 'CodeCedexEtablissement'
        /// </summary>
        [Fact]
        public void CodeCedexEtablissementTest()
        {
            // TODO unit test for the property 'CodeCedexEtablissement'
        }
        /// <summary>
        /// Test the property 'LibelleCedexEtablissement'
        /// </summary>
        [Fact]
        public void LibelleCedexEtablissementTest()
        {
            // TODO unit test for the property 'LibelleCedexEtablissement'
        }
        /// <summary>
        /// Test the property 'CodePaysEtrangerEtablissement'
        /// </summary>
        [Fact]
        public void CodePaysEtrangerEtablissementTest()
        {
            // TODO unit test for the property 'CodePaysEtrangerEtablissement'
        }
        /// <summary>
        /// Test the property 'LibellePaysEtrangerEtablissement'
        /// </summary>
        [Fact]
        public void LibellePaysEtrangerEtablissementTest()
        {
            // TODO unit test for the property 'LibellePaysEtrangerEtablissement'
        }

    }

}
