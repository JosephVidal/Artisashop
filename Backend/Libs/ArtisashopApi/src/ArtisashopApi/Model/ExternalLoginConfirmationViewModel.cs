/*
 * API Artisashop
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArtisashopApi.Client.OpenAPIDateConverter;

namespace ArtisashopApi.Model
{
    /// <summary>
    /// ExternalLoginConfirmationViewModel
    /// </summary>
    [DataContract(Name = "ExternalLoginConfirmationViewModel")]
    public partial class ExternalLoginConfirmationViewModel : IEquatable<ExternalLoginConfirmationViewModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExternalLoginConfirmationViewModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ExternalLoginConfirmationViewModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ExternalLoginConfirmationViewModel" /> class.
        /// </summary>
        /// <param name="email">email (required).</param>
        /// <param name="gender">gender (required).</param>
        /// <param name="birthdate">birthdate (required).</param>
        /// <param name="givenName">givenName (required).</param>
        /// <param name="familyName">familyName (required).</param>
        /// <param name="preferredName">preferredName.</param>
        public ExternalLoginConfirmationViewModel(string email = default(string), string gender = default(string), DateTime birthdate = default(DateTime), string givenName = default(string), string familyName = default(string), string preferredName = default(string))
        {
            // to ensure "email" is required (not null)
            if (email == null)
            {
                throw new ArgumentNullException("email is a required property for ExternalLoginConfirmationViewModel and cannot be null");
            }
            this.Email = email;
            // to ensure "gender" is required (not null)
            if (gender == null)
            {
                throw new ArgumentNullException("gender is a required property for ExternalLoginConfirmationViewModel and cannot be null");
            }
            this.Gender = gender;
            this.Birthdate = birthdate;
            // to ensure "givenName" is required (not null)
            if (givenName == null)
            {
                throw new ArgumentNullException("givenName is a required property for ExternalLoginConfirmationViewModel and cannot be null");
            }
            this.GivenName = givenName;
            // to ensure "familyName" is required (not null)
            if (familyName == null)
            {
                throw new ArgumentNullException("familyName is a required property for ExternalLoginConfirmationViewModel and cannot be null");
            }
            this.FamilyName = familyName;
            this.PreferredName = preferredName;
        }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", IsRequired = true, EmitDefaultValue = true)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name = "gender", IsRequired = true, EmitDefaultValue = true)]
        public string Gender { get; set; }

        /// <summary>
        /// Gets or Sets Birthdate
        /// </summary>
        [DataMember(Name = "birthdate", IsRequired = true, EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime Birthdate { get; set; }

        /// <summary>
        /// Gets or Sets GivenName
        /// </summary>
        [DataMember(Name = "givenName", IsRequired = true, EmitDefaultValue = true)]
        public string GivenName { get; set; }

        /// <summary>
        /// Gets or Sets FamilyName
        /// </summary>
        [DataMember(Name = "familyName", IsRequired = true, EmitDefaultValue = true)]
        public string FamilyName { get; set; }

        /// <summary>
        /// Gets or Sets PreferredName
        /// </summary>
        [DataMember(Name = "preferredName", EmitDefaultValue = true)]
        public string PreferredName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ExternalLoginConfirmationViewModel {\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  Birthdate: ").Append(Birthdate).Append("\n");
            sb.Append("  GivenName: ").Append(GivenName).Append("\n");
            sb.Append("  FamilyName: ").Append(FamilyName).Append("\n");
            sb.Append("  PreferredName: ").Append(PreferredName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ExternalLoginConfirmationViewModel);
        }

        /// <summary>
        /// Returns true if ExternalLoginConfirmationViewModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ExternalLoginConfirmationViewModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ExternalLoginConfirmationViewModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Gender == input.Gender ||
                    (this.Gender != null &&
                    this.Gender.Equals(input.Gender))
                ) && 
                (
                    this.Birthdate == input.Birthdate ||
                    (this.Birthdate != null &&
                    this.Birthdate.Equals(input.Birthdate))
                ) && 
                (
                    this.GivenName == input.GivenName ||
                    (this.GivenName != null &&
                    this.GivenName.Equals(input.GivenName))
                ) && 
                (
                    this.FamilyName == input.FamilyName ||
                    (this.FamilyName != null &&
                    this.FamilyName.Equals(input.FamilyName))
                ) && 
                (
                    this.PreferredName == input.PreferredName ||
                    (this.PreferredName != null &&
                    this.PreferredName.Equals(input.PreferredName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                if (this.Gender != null)
                {
                    hashCode = (hashCode * 59) + this.Gender.GetHashCode();
                }
                if (this.Birthdate != null)
                {
                    hashCode = (hashCode * 59) + this.Birthdate.GetHashCode();
                }
                if (this.GivenName != null)
                {
                    hashCode = (hashCode * 59) + this.GivenName.GetHashCode();
                }
                if (this.FamilyName != null)
                {
                    hashCode = (hashCode * 59) + this.FamilyName.GetHashCode();
                }
                if (this.PreferredName != null)
                {
                    hashCode = (hashCode * 59) + this.PreferredName.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // Email (string) minLength
            if (this.Email != null && this.Email.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Email, length must be greater than 1.", new [] { "Email" });
            }

            // Gender (string) minLength
            if (this.Gender != null && this.Gender.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Gender, length must be greater than 1.", new [] { "Gender" });
            }

            // GivenName (string) minLength
            if (this.GivenName != null && this.GivenName.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for GivenName, length must be greater than 1.", new [] { "GivenName" });
            }

            // FamilyName (string) minLength
            if (this.FamilyName != null && this.FamilyName.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FamilyName, length must be greater than 1.", new [] { "FamilyName" });
            }

            yield break;
        }
    }

}
