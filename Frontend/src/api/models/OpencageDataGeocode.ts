/* tslint:disable */
/* eslint-disable */
/**
 * API Artisashop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreatedTimestampInfo } from './CreatedTimestampInfo';
import {
    CreatedTimestampInfoFromJSON,
    CreatedTimestampInfoFromJSONTyped,
    CreatedTimestampInfoToJSON,
} from './CreatedTimestampInfo';
import type { LicenseInfo } from './LicenseInfo';
import {
    LicenseInfoFromJSON,
    LicenseInfoFromJSONTyped,
    LicenseInfoToJSON,
} from './LicenseInfo';
import type { RateInfo } from './RateInfo';
import {
    RateInfoFromJSON,
    RateInfoFromJSONTyped,
    RateInfoToJSON,
} from './RateInfo';
import type { ResultData } from './ResultData';
import {
    ResultDataFromJSON,
    ResultDataFromJSONTyped,
    ResultDataToJSON,
} from './ResultData';
import type { SocialInfo } from './SocialInfo';
import {
    SocialInfoFromJSON,
    SocialInfoFromJSONTyped,
    SocialInfoToJSON,
} from './SocialInfo';

/**
 * 
 * @export
 * @interface OpencageDataGeocode
 */
export interface OpencageDataGeocode {
    /**
     * 
     * @type {string}
     * @memberof OpencageDataGeocode
     */
    documentation?: string | null;
    /**
     * 
     * @type {Array<LicenseInfo>}
     * @memberof OpencageDataGeocode
     */
    licenses?: Array<LicenseInfo> | null;
    /**
     * 
     * @type {RateInfo}
     * @memberof OpencageDataGeocode
     */
    rate?: RateInfo;
    /**
     * 
     * @type {Array<ResultData>}
     * @memberof OpencageDataGeocode
     */
    results?: Array<ResultData> | null;
    /**
     * 
     * @type {number}
     * @memberof OpencageDataGeocode
     */
    totalResults?: number;
    /**
     * 
     * @type {SocialInfo}
     * @memberof OpencageDataGeocode
     */
    stayInformed?: SocialInfo;
    /**
     * 
     * @type {string}
     * @memberof OpencageDataGeocode
     */
    thanks?: string | null;
    /**
     * 
     * @type {CreatedTimestampInfo}
     * @memberof OpencageDataGeocode
     */
    timestamp?: CreatedTimestampInfo;
}

/**
 * Check if a given object implements the OpencageDataGeocode interface.
 */
export function instanceOfOpencageDataGeocode(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OpencageDataGeocodeFromJSON(json: any): OpencageDataGeocode {
    return OpencageDataGeocodeFromJSONTyped(json, false);
}

export function OpencageDataGeocodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpencageDataGeocode {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'documentation': !exists(json, 'documentation') ? undefined : json['documentation'],
        'licenses': !exists(json, 'licenses') ? undefined : (json['licenses'] === null ? null : (json['licenses'] as Array<any>).map(LicenseInfoFromJSON)),
        'rate': !exists(json, 'rate') ? undefined : RateInfoFromJSON(json['rate']),
        'results': !exists(json, 'results') ? undefined : (json['results'] === null ? null : (json['results'] as Array<any>).map(ResultDataFromJSON)),
        'totalResults': !exists(json, 'total_results') ? undefined : json['total_results'],
        'stayInformed': !exists(json, 'stay_informed') ? undefined : SocialInfoFromJSON(json['stay_informed']),
        'thanks': !exists(json, 'thanks') ? undefined : json['thanks'],
        'timestamp': !exists(json, 'timestamp') ? undefined : CreatedTimestampInfoFromJSON(json['timestamp']),
    };
}

export function OpencageDataGeocodeToJSON(value?: OpencageDataGeocode | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'documentation': value.documentation,
        'licenses': value.licenses === undefined ? undefined : (value.licenses === null ? null : (value.licenses as Array<any>).map(LicenseInfoToJSON)),
        'rate': RateInfoToJSON(value.rate),
        'results': value.results === undefined ? undefined : (value.results === null ? null : (value.results as Array<any>).map(ResultDataToJSON)),
        'total_results': value.totalResults,
        'stay_informed': SocialInfoToJSON(value.stayInformed),
        'thanks': value.thanks,
        'timestamp': CreatedTimestampInfoToJSON(value.timestamp),
    };
}

