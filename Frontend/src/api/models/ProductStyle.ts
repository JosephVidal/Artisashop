/* tslint:disable */
/* eslint-disable */
/**
 * API Artisashop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './Product';

/**
 * 
 * @export
 * @interface ProductStyle
 */
export interface ProductStyle {
    /**
     * 
     * @type {number}
     * @memberof ProductStyle
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof ProductStyle
     */
    productId?: number;
    /**
     * 
     * @type {Product}
     * @memberof ProductStyle
     */
    product?: Product;
    /**
     * 
     * @type {string}
     * @memberof ProductStyle
     */
    normalizedName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductStyle
     */
    displayName?: string | null;
}

/**
 * Check if a given object implements the ProductStyle interface.
 */
export function instanceOfProductStyle(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductStyleFromJSON(json: any): ProductStyle {
    return ProductStyleFromJSONTyped(json, false);
}

export function ProductStyleFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductStyle {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'productId': !exists(json, 'productId') ? undefined : json['productId'],
        'product': !exists(json, 'product') ? undefined : ProductFromJSON(json['product']),
        'normalizedName': !exists(json, 'normalizedName') ? undefined : json['normalizedName'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
    };
}

export function ProductStyleToJSON(value?: ProductStyle | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'productId': value.productId,
        'product': ProductToJSON(value.product),
        'normalizedName': value.normalizedName,
        'displayName': value.displayName,
    };
}

