/* tslint:disable */
/* eslint-disable */
/**
 * API Artisashop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Account } from './Account';
import {
    AccountFromJSON,
    AccountFromJSONTyped,
    AccountToJSON,
} from './Account';
import type { Bill } from './Bill';
import {
    BillFromJSON,
    BillFromJSONTyped,
    BillToJSON,
} from './Bill';
import type { ComplaintStatus } from './ComplaintStatus';
import {
    ComplaintStatusFromJSON,
    ComplaintStatusFromJSONTyped,
    ComplaintStatusToJSON,
} from './ComplaintStatus';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './Product';

/**
 * 
 * @export
 * @interface Complaint
 */
export interface Complaint {
    /**
     * 
     * @type {number}
     * @memberof Complaint
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof Complaint
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Complaint
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Complaint
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Complaint
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof Complaint
     */
    userId: string;
    /**
     * 
     * @type {Account}
     * @memberof Complaint
     */
    user?: Account;
    /**
     * 
     * @type {number}
     * @memberof Complaint
     */
    productId?: number | null;
    /**
     * 
     * @type {Product}
     * @memberof Complaint
     */
    product?: Product;
    /**
     * 
     * @type {number}
     * @memberof Complaint
     */
    orderId?: number | null;
    /**
     * 
     * @type {Bill}
     * @memberof Complaint
     */
    order?: Bill;
    /**
     * 
     * @type {ComplaintStatus}
     * @memberof Complaint
     */
    status?: ComplaintStatus;
}

/**
 * Check if a given object implements the Complaint interface.
 */
export function instanceOfComplaint(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "userId" in value;

    return isInstance;
}

export function ComplaintFromJSON(json: any): Complaint {
    return ComplaintFromJSONTyped(json, false);
}

export function ComplaintFromJSONTyped(json: any, ignoreDiscriminator: boolean): Complaint {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (json['createdAt'] === null ? null : new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (json['updatedAt'] === null ? null : new Date(json['updatedAt'])),
        'title': json['title'],
        'description': json['description'],
        'userId': json['userId'],
        'user': !exists(json, 'user') ? undefined : AccountFromJSON(json['user']),
        'productId': !exists(json, 'productId') ? undefined : json['productId'],
        'product': !exists(json, 'product') ? undefined : ProductFromJSON(json['product']),
        'orderId': !exists(json, 'orderId') ? undefined : json['orderId'],
        'order': !exists(json, 'order') ? undefined : BillFromJSON(json['order']),
        'status': !exists(json, 'status') ? undefined : ComplaintStatusFromJSON(json['status']),
    };
}

export function ComplaintToJSON(value?: Complaint | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt === null ? null : value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt === null ? null : value.updatedAt.toISOString()),
        'title': value.title,
        'description': value.description,
        'userId': value.userId,
        'user': AccountToJSON(value.user),
        'productId': value.productId,
        'product': ProductToJSON(value.product),
        'orderId': value.orderId,
        'order': BillToJSON(value.order),
        'status': ComplaintStatusToJSON(value.status),
    };
}

