/* tslint:disable */
/* eslint-disable */
/**
 * API Artisashop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { State } from './State';
import {
    StateFromJSON,
    StateFromJSONTyped,
    StateToJSON,
} from './State';

/**
 * 
 * @export
 * @interface CreateBasket
 */
export interface CreateBasket {
    /**
     * 
     * @type {number}
     * @memberof CreateBasket
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof CreateBasket
     */
    productId?: number;
    /**
     * 
     * @type {number}
     * @memberof CreateBasket
     */
    quantity: number;
    /**
     * 
     * @type {State}
     * @memberof CreateBasket
     */
    currentState: State;
}

/**
 * Check if a given object implements the CreateBasket interface.
 */
export function instanceOfCreateBasket(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "quantity" in value;
    isInstance = isInstance && "currentState" in value;

    return isInstance;
}

export function CreateBasketFromJSON(json: any): CreateBasket {
    return CreateBasketFromJSONTyped(json, false);
}

export function CreateBasketFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateBasket {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'productId': !exists(json, 'productId') ? undefined : json['productId'],
        'quantity': json['quantity'],
        'currentState': StateFromJSON(json['currentState']),
    };
}

export function CreateBasketToJSON(value?: CreateBasket | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'productId': value.productId,
        'quantity': value.quantity,
        'currentState': StateToJSON(value.currentState),
    };
}

