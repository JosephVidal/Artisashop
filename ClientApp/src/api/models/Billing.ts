/* tslint:disable */
/* eslint-disable */
/**
 * API Artichaut
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Account } from './Account';
import {
    AccountFromJSON,
    AccountFromJSONTyped,
    AccountToJSON,
} from './Account';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './Product';

/**
 * 
 * @export
 * @interface Billing
 */
export interface Billing {
    /**
     * 
     * @type {number}
     * @memberof Billing
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof Billing
     */
    date?: Date;
    /**
     * 
     * @type {number}
     * @memberof Billing
     */
    price?: number;
    /**
     * 
     * @type {string}
     * @memberof Billing
     */
    buyerId?: string | null;
    /**
     * 
     * @type {Account}
     * @memberof Billing
     */
    buyer?: Account;
    /**
     * 
     * @type {number}
     * @memberof Billing
     */
    productId?: number;
    /**
     * 
     * @type {Product}
     * @memberof Billing
     */
    product?: Product;
    /**
     * 
     * @type {number}
     * @memberof Billing
     */
    sellerId?: number;
    /**
     * 
     * @type {Account}
     * @memberof Billing
     */
    seller?: Account;
}

/**
 * Check if a given object implements the Billing interface.
 */
export function instanceOfBilling(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BillingFromJSON(json: any): Billing {
    return BillingFromJSONTyped(json, false);
}

export function BillingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Billing {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'price': !exists(json, 'price') ? undefined : json['price'],
        'buyerId': !exists(json, 'buyerId') ? undefined : json['buyerId'],
        'buyer': !exists(json, 'buyer') ? undefined : AccountFromJSON(json['buyer']),
        'productId': !exists(json, 'productId') ? undefined : json['productId'],
        'product': !exists(json, 'product') ? undefined : ProductFromJSON(json['product']),
        'sellerId': !exists(json, 'sellerId') ? undefined : json['sellerId'],
        'seller': !exists(json, 'seller') ? undefined : AccountFromJSON(json['seller']),
    };
}

export function BillingToJSON(value?: Billing | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'date': value.date === undefined ? undefined : (value.date.toISOString()),
        'price': value.price,
        'buyerId': value.buyerId,
        'buyer': AccountToJSON(value.buyer),
        'productId': value.productId,
        'product': ProductToJSON(value.product),
        'sellerId': value.sellerId,
        'seller': AccountToJSON(value.seller),
    };
}

