/* tslint:disable */
/* eslint-disable */
/**
 * API Artichaut
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UnitAmount } from './UnitAmount';
import {
    UnitAmountFromJSON,
    UnitAmountFromJSONTyped,
    UnitAmountToJSON,
} from './UnitAmount';

/**
 * 
 * @export
 * @interface ItemElem
 */
export interface ItemElem {
    /**
     * 
     * @type {string}
     * @memberof ItemElem
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ItemElem
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ItemElem
     */
    quantity: number;
    /**
     * 
     * @type {UnitAmount}
     * @memberof ItemElem
     */
    unitAmount: UnitAmount;
}

/**
 * Check if a given object implements the ItemElem interface.
 */
export function instanceOfItemElem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "quantity" in value;
    isInstance = isInstance && "unitAmount" in value;

    return isInstance;
}

export function ItemElemFromJSON(json: any): ItemElem {
    return ItemElemFromJSONTyped(json, false);
}

export function ItemElemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemElem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'quantity': json['quantity'],
        'unitAmount': UnitAmountFromJSON(json['unitAmount']),
    };
}

export function ItemElemToJSON(value?: ItemElem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'quantity': value.quantity,
        'unitAmount': UnitAmountToJSON(value.unitAmount),
    };
}

